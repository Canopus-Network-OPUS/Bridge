{
	"compiler": {
		"version": "0.6.4+commit.1dca32f3"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "resourceID",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "destinationChainID",
						"type": "uint8"
					},
					{
						"internalType": "uint64",
						"name": "depositNonce",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "depositer",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "resourceID",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "executeProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "ChainSafe Systems.",
			"methods": {
				"deposit(bytes32,uint8,uint64,address,bytes)": {
					"params": {
						"data": "Consists of additional data needed for a specific deposit.",
						"depositNonce": "This value is generated as an ID by the Bridge contract.",
						"depositer": "Address of account making the deposit in the Bridge contract.",
						"destinationChainID": "Chain ID deposit is expected to be bridged to."
					}
				},
				"executeProposal(bytes32,bytes)": {
					"params": {
						"data": "Consists of additional data needed for a specific deposit execution."
					}
				}
			},
			"title": "Interface for handler contracts that support deposits and deposit executions."
		},
		"userdoc": {
			"methods": {
				"deposit(bytes32,uint8,uint64,address,bytes)": {
					"notice": "It is intended that deposit are made using the Bridge contract."
				},
				"executeProposal(bytes32,bytes)": {
					"notice": "It is intended that proposals are executed by the Bridge contract."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"Binance Smart Chain/Bridge/bridge.sol": "IDepositExecute"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Binance Smart Chain/Bridge/bridge.sol": {
			"keccak256": "0xf8ae3afa2cefc5132837260f928859e8b1116da37cf02ca8c6f7028193e400be",
			"urls": [
				"bzz-raw://8a8fb4d72f6bf37996f0e72a22c2d8753ef1dc6c7021d8e5de765c230e651993",
				"dweb:/ipfs/Qmb4seyHUXWqF3toiyxJgXSkTMMNnZc1DvCmAWnDvnQGHJ"
			]
		}
	},
	"version": 1
}
